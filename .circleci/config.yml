version: 2.1


jobs:
  continuous-integration:
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - checkout
      - run:
          name: lint code
          command: echo "Linting repository"
      - run:
          name: run unit tests
          command: echo "Running unit tests"
  continuous-delivery:
    docker:
      - image: cimg/base:stable 
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Login to Azure Container Registry
          command: echo $AZURE_REGISTRY_PASSWORD | docker login $AZURE_REGISTRY_NAME.azurecr.io --username $AZURE_REGISTRY_USERNAME --password-stdin
      - run:
          name: Build docker
          command: docker build -t $AZURE_REGISTRY_NAME.azurecr.io/$IMAGE_NAME:$TAG .
      - run:
          name: push to azure container registry
          command: docker push $AZURE_REGISTRY_NAME.azurecr.io/$IMAGE_NAME:$TAG
  continuous-deployment:
    machine: true
    resource_class: nikeshkaza/self-hosted
    environment:
      MONGO_DB_URL: $MONGO_DB_URL
      CONNECTION_STRING: $CONNECTION_STRING
      CONTAINER_NAME: $CONTAINER_NAME
    steps:
      - checkout
      
      - run: 
          name: Login to Azure Container Registry
          command: echo $AZURE_REGISTRY_PASSWORD | docker login $AZURE_REGISTRY_NAME.azurecr.io --username $AZURE_REGISTRY_USERNAME --password-stdin

      - run:
          name: pull image from private repository
          command: docker pull $AZURE_REGISTRY_NAME.azurecr.io/$IMAGE_NAME:$TAG

      - run:
          name: Remove Already Running Container
          command: docker ps -q --filter "name=$IMAGE_NAME" | grep -q . && docker stop $IMAGE_NAME && docker rm -fv $IMAGE_NAME || true

      - run:
          name: free up system space
          command: docker system prune -f
      - run:
          name: set env variables
          command: echo 'export IMAGE_NAME="$AZURE_REGISTRY_NAME.azurecr.io/$IMAGE_NAME:$TAG"' >> "$BASH_ENV"

      - run:
          name: start container
          command: docker-compose up -d
 


workflows:
  CICD:
    jobs:
      - continuous-integration

      - continuous-delivery:
          requires:
            - continuous-integration

      - sanity-check:
          type: approval
          requires:
          - continuous-delivery

      - continuous-deployment:
          requires:
            - sanity-check
            - continuous-integration
            - continuous-delivery
